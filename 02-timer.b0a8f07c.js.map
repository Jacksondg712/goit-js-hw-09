{"mappings":"YACA,IAQIA,EACJC,EACAC,EACAC,EACAC,EAZMC,EAAOC,SAASC,cAAc,oBAC9BC,EAAYF,SAASC,cAAc,cACnCE,EAAWH,SAASC,cAAc,cAClCG,EAAYJ,SAASC,cAAc,eACnCI,EAAcL,SAASC,cAAc,iBACrCK,EAAcN,SAASC,cAAc,iBAS3C,SAASM,EAAUC,GAEf,IACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAWZ,MAAO,CAAEE,KARIC,KAAKC,MAAMP,EAAKI,GAQdI,MANDF,KAAKC,MAAMP,EAAMI,EAAOD,GAMhBM,QAJNH,KAAKC,MAAMP,EAAOI,EAAOD,EAAQF,GAIlBS,QAFfJ,KAAKC,MAAMP,EAAQI,EAAOD,EAAQF,EAZnC,K,CATnBP,EAAUiB,UAAW,EA8CVC,UAAUrB,EAAM,CACvBsB,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,OAAA,SAAOC,GAEHjC,EAAUkC,KAAKC,UAAUtB,EAAUoB,EAAG,KACtC/B,EAASgC,KAAKE,MAAMpC,GACpBqC,QAAQC,IAAIpC,E,EAEhBqC,QAAA,SAAQC,GACJvC,EAAYiC,KAAKC,UAAUtB,EAAU2B,EAAG,KACxCrC,EAAW+B,KAAKE,MAAMnC,GACtBoC,QAAQC,IAAInC,GAGXH,EAAUC,GACXwC,OAAOC,MAAM,sCACbC,SAASC,WAGLpC,EAAUiB,SAAW,KACrBjB,EAAUqC,iBAAiB,SAAS,WAChC,IAAIC,EAAc,GAEtB,IAAK,IAAIC,KAAS5C,EACVA,EAAS6C,eAAeD,IAAU7C,EAAO8C,eAAeD,KACxDD,EAAYC,GAAS5C,EAAS4C,GAAS7C,EAAO6C,IAI9CtC,EAASwC,UAAeH,EAAY3B,KACpCT,EAAUuC,UAAcH,EAAYxB,MACpCX,EAAYsC,UAAYH,EAAYvB,QACpCX,EAAYqC,UAAYH,EAAYtB,QACpC,IAAI0B,EAAcJ,EAAY3B,KAC1BgC,GAAoC,EAApBL,EAAYxB,MAC5B8B,EAAiBN,EAAYvB,QAC7B8B,GAAuC,EAAtBP,EAAYtB,QA0BnCpB,EAASkD,aAxBT,WACEjB,QAAQC,IAAIY,EAAaC,EAAcC,EAAgBC,GAEvDA,IACAzC,EAAYqC,UAAYI,EACxB1C,EAAYsC,UAAYG,EAAiB,EACrB,GAAjBC,IACCA,EAAgB,GAChBD,GAAkC,EAClCzC,EAAYsC,UAAYG,EACH,GAAlBA,IACCA,EAAiB,EACjBD,IACA1C,EAASwC,UAAY,KACbvC,EAAUuC,UAAW,KACrBtC,EAAYsC,UAAY,KACxBrC,EAAYqC,UAAY,KACxBM,cAAcnD,GACduC,SAASC,U,GAMI,I","sources":["src/js/02-timer.js"],"sourcesContent":["\nconst falt = document.querySelector(\"#datetime-picker\");\nconst btonStart = document.querySelector(\".btonStart\");\nconst spanDays = document.querySelector(\".valueDays\");\nconst spanHours = document.querySelector(\".valueHours\");\nconst spanMinutes = document.querySelector(\".valueMinutes\");\nconst spanSeconds = document.querySelector(\".valueSeconds\");\n\nbtonStart.disabled = true;\nvar timeAct, \ntimeAfter, \nobjAct, \nobjAfter,\ntimeId;\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n\n    \n  \n\n  \n  \n//   function contador(objAfter){\n//     spanDays.innerHTML = objetoResta.days;\n//     spanHours.innerHTML = objetoResta.hours;\n//     spanMinutes.innerHTML = objetoResta.minutes;\n//     spanSeconds.innerHTML = objetoResta.seconds;\n\n//     setTimeout(function(){\n//         contador(objAfter);\n//     },1000);\n//   }\n\n\n\n  \n\nconst fp = flatpickr(falt, {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onOpen(fp){\n        // console.log(fp[0]);\n        timeAct = JSON.stringify(convertMs(fp[0]));\n        objAct = JSON.parse(timeAct);\n        console.log(objAct);\n    },\n    onClose(fp) {\n        timeAfter = JSON.stringify(convertMs(fp[0]));\n        objAfter = JSON.parse(timeAfter);\n        console.log(objAfter);\n        \n\n      if(timeAct > timeAfter ){\n        window.alert(\"Please choose a date in the future\");\n        location.reload();\n        }\n        else{\n            btonStart.disabled = null;\n            btonStart.addEventListener(\"click\", () => {\n                var objetoResta = {};\n\n            for (var clave in objAfter){\n                if (objAfter.hasOwnProperty(clave) && objAct.hasOwnProperty(clave)) {\n                    objetoResta[clave] = objAfter[clave] - objAct[clave];\n                    }\n            }\n                \n                    spanDays.innerHTML =    objetoResta.days;\n                    spanHours.innerHTML =   objetoResta.hours;\n                    spanMinutes.innerHTML = objetoResta.minutes;\n                    spanSeconds.innerHTML = objetoResta.seconds;\n                    let counterDays = objetoResta.days;\n                    let counterHours = (objetoResta.hours * -1); \n                    let counterMinutes = objetoResta.minutes; \n                    let counterSecond = (objetoResta.seconds * -1);\n\n                  function contador(){\n                    console.log(counterDays, counterHours, counterMinutes, counterSecond);\n\n                    counterSecond--;\n                    spanSeconds.innerHTML = counterSecond;\n                    spanMinutes.innerHTML = counterMinutes - 1;\n                    if(counterSecond == 0){\n                        counterSecond = 60;\n                        counterMinutes = counterMinutes - 1;\n                        spanMinutes.innerHTML = counterMinutes;\n                        if(counterMinutes == 0){\n                            counterMinutes = 0;\n                            counterHours--;\n                            spanDays.innerHTML = \"00\";\n                                    spanHours.innerHTML =\"00\";\n                                    spanMinutes.innerHTML = \"00\";\n                                    spanSeconds.innerHTML = \"00\";\n                                    clearInterval(timeId);\n                                    location.reload();\n                          \n                        }\n                    }\n                  }\n\n                  timeId = setInterval(contador, 1000);\n            },);\n        }   \n    }\n});"],"names":["$84b9dae4df53835d$var$timeAct","$84b9dae4df53835d$var$timeAfter","$84b9dae4df53835d$var$objAct","$84b9dae4df53835d$var$objAfter","$84b9dae4df53835d$var$timeId","$84b9dae4df53835d$var$falt","document","querySelector","$84b9dae4df53835d$var$btonStart","$84b9dae4df53835d$var$spanDays","$84b9dae4df53835d$var$spanHours","$84b9dae4df53835d$var$spanMinutes","$84b9dae4df53835d$var$spanSeconds","$84b9dae4df53835d$var$convertMs","ms","minute","second","hour","day","days","Math","floor","hours","minutes","seconds","disabled","flatpickr","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onOpen","fp1","JSON","stringify","parse","console","log","onClose","fp2","window","alert","location","reload","addEventListener","objetoResta","clave","hasOwnProperty","innerHTML","counterDays","counterHours","counterMinutes","counterSecond","setInterval","clearInterval"],"version":3,"file":"02-timer.b0a8f07c.js.map"}